a = ['RegCloseKey','GetCurrentProcess','OpenProcessToken','CryptCreateHash','GetProcAddress','RegCloseKey','GetCurrentProcess','OpenProcessToken','CryptCreateHash','GetProcAddress','RegCloseKey','GetCurrentProcess','OpenProcessToken','CryptCreateHash','GetProcAddress','RegCloseKey','GetCurrentProcess','OpenProcessToken','CryptCreateHash','GetProcAddress','RegCloseKey','GetCurrentProcess','OpenProcessToken','CryptCreateHash','GetProcAddress','RegCloseKey','GetCurrentProcess','OpenProcessToken','CryptCreateHash','GetProcAddress','RegCloseKey','GetCurrentProcess','OpenProcessToken','CryptCreateHash','RegCloseKey','GetProcAddress','GetCurrentProcess','OpenProcessToken','CryptCreateHash','GetProcAddress','RegCloseKey','GetCurrentProcess','OpenProcessToken','CryptCreateHash','GetProcAddress','RegCloseKey','GetCurrentProcess','OpenProcessToken','CryptCreateHash','GetProcAddress','RegCloseKey','GetCurrentProcess','OpenProcessToken','CryptCreateHash','GetProcAddress','RegCloseKey','GetCurrentProcess','OpenProcessToken','CryptCreateHash','OpenProcessToken','RegCloseKey','CryptCreateHash','GetProcAddress','GetCurrentProcess','GetProcAddress','GetProcAddress','GetProcAddress','RegCloseKey','GetCurrentProcess','OpenProcessToken','CryptCreateHash']

import pylcs

#  finding the longest common subsequence length of string A and string B
A = 'We are shannonai' + chr(1)
B = 'We like shannonai' + chr(1)
print(pylcs.lcs(A, B))
"""
>>> pylcs.lcs(A, B)
14
"""

#  finding the longest common subsequence length of string A and a list of string B
A = 'We are shannonai'
B = ['We like shannonai', 'We work in shannonai', 'We are not shannonai']
pylcs.lcs_of_list(A, B)
"""
>>> pylcs.lcs_of_list(A, B)
[14, 14, 16]
"""

# finding the longest common substring length of string A and string B
A = 'We are shannonai'
B = 'We like shannonai'
pylcs.lcs2(A, B)
"""
>>> pylcs.lcs2(A, B)
11
"""

#  finding the longest common substring length of string A and a list of string B
A = 'We are shannonai'
B = ['We like shannonai', 'We work in shannonai', 'We are not shannonai']
pylcs.lcs2_of_list(A, B)
"""
>>> pylcs.lcs2_of_list(A, B)
[11, 10, 10]
"""
