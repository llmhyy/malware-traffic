import os
from typing import List

import numpy as np
import pandas as pd


def get_child_pids(current_pid: int, diff: pd.DataFrame) -> List:
	"""
	Get the child process pid of one process given its pid
	:param current_pid: pid of the malware/parent process
	:param diff: dataframe with recordings
	:return: list of pids
	"""
	
	childs = diff[diff["parent_pid"] == current_pid]
	if childs.shape[0] == 0:
		return [current_pid]
	return [current_pid] + [v for index, row in childs.iterrows() for v in get_child_pids(row["process_id"], diff)]


def ip_from_process_name(malware_name: str = "malware.exe", path: str = "./") -> List[str]:
	"""
	Get the IPs used in TCP packets by a malware and its child, given the parent malware process name
	:param malware_name: name of the malware
	:param path: path of the malware recording directory
	:return: list of ips used by the malware and its children. If empty, the segmentation will take all the IP addresses
	"""
	
	if not os.path.exists(path):
		raise RuntimeError("Path of malware recording directory seems t")
	
	first = pd.read_csv(path + "process_pre.csv")
	post = pd.read_csv(path + "process_post.csv")
	
	first.drop(first.columns[0], axis=1, inplace=True)
	post.drop(post.columns[0], axis=1, inplace=True)
	
	diff = first.merge(post, indicator=True, how='right').loc[lambda x: x['_merge'] != 'both']
	try:
		malware_pid = int(diff.loc[diff['process_name'] == malware_name]["process_id"].astype(float))
	except TypeError:
		raise RuntimeError('Malware PID not found, check malware name')
	netstat = pd.read_csv(path + "netstat.csv")
	netstat.drop(netstat.columns[0], axis=1, inplace=True)
	
	def fun(arg):
		return arg.split(":")[0]
	
	ips_filtered = list(map(fun, np.unique(
		netstat[netstat["Process ID"].isin(list(set(get_child_pids(malware_pid, diff))))]["Destination"].dropna(
			inplace=False).to_numpy())))
	return ips_filtered


if __name__ == "__main__":
	ip_from_process_name()
