import glob
import json

def template(category, api, dll):
    return f"""
    try{{
        Interceptor.attach(Module.getExportByName('{dll}', '{api}'), {{
        onEnter: function (args) {{
            send({{
            api_name: '{api}',
            category: '{category}'
            }});
        }}
        }});
    }}
    catch(error){{
        send({{
        api_name: 'error',
        category: 'import not found in app'
        }});
    }}
    """

def generate_js(file):
    new_js = ""
    with open(file, 'r') as f:
        l = f.readlines()
        for api in l:
            api = api.strip("\n")
            category, api_name, dll = api.split(",")
            new_js += template(category, api_name, dll)
    return new_js

class API_Database:
    def __init__(self):
        api_dict = {}

        json_files = []
        for file in glob.glob("./winapi-json/api_by_category/*.json"):
            json_files.append(file)
        
        for json_file in json_files:
            with open(json_file, 'r') as file:
                json_descriptor = json.loads(file.read())
                for api_fun in json_descriptor:
                    dll = api_fun['dll']
                    name = api_fun['name']
                    api_dict[name.lower()] = (dll, name)
        self.api_dict = api_dict

    def getDll(self, name):
        name = name.lower()
        try:
            dll, fun_name = self.api_dict.get(name)
        except TypeError:
            print(f"{name} not found")
            return None
        return dll, fun_name

if __name__ == "__main__":
    """js = generate_js("./api_list.txt")
    print(js)"""
    db = API_Database()
    with open("new_api_list.txt", "w") as new_file:
        with open("api_list.txt", "r") as old_file:
            old_lines = old_file.readlines()
            for old_line in old_lines:
                nb_col = len(old_line.strip('\n').split(','))
                if nb_col == 3: #Already here
                    new_file.write(old_line)
                elif nb_col == 2:
                    cat, name = old_line.strip('\n').split(',')
                    db_result = db.getDll(name)
                    if db_result:
                        dll, fun_name = db_result
                        new_file.write(f"{cat},{fun_name},{dll}\n")
