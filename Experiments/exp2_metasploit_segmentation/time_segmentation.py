from scapy.all import *
import matplotlib.pyplot as plt
import numpy as np
from sklearn.cluster import KMeans
from scipy import sparse
# if you get any error, please update scikit-network!
times_src, times_dst = [], []

packets = rdpcap('./cap.pcapng')
for packet in packets:
    if TCP in packet and packet[IP].src=="10.0.2.6":
        times_src.append(packet.time * 1000000)
    elif TCP in packet and packet[IP].dst=="10.0.2.6":
        times_dst.append(packet.time * 1000000)   

min_time = packets[0].time * 1000000
times_src = list(map(lambda x: (x - min_time), times_src))
times_dst = list(map(lambda x: (x - min_time), times_dst))

times = [times_src, times_dst]
colors = ['red', 'lime']
description = ['received', "emitted"]
plt.hist(times, bins=500, histtype='bar', color=colors, label=description)
plt.legend(loc="upper right")
plt.title('Nb of packets')
#plt.show()

#Kmeans
time = times_src
X = np.array([[time[i] - time[i-1]] for i in range(1, len(time))])
kmeans = KMeans(n_clusters=2, random_state=0).fit(X)

"""KMEANS DIAGNOSTIC
a = kmeans.labels_
print(a[1])
l0 = [X[i] for i in range(len(X)) if a[i]==0]
l1 = [X[i] for i in range(len(X)) if a[i]==1]

times=[l0, l1]
colors = ['red', 'lime']
description = ['0', "1"]
plt.clf()
plt.hist(times, bins=19, histtype='bar', color=colors, label=description, stacked=True)
plt.legend(loc="upper right")
plt.title('Nb of packets')
plt.show()
"""
a = kmeans.labels_
lists = np.split(time, (np.where(a==1)[0]+1))
plt.clf()
plt.hist(lists, bins=25, histtype='bar', stacked=True)
plt.ylim((0, 50))
plt.title('Groups of packets - Trickbot')
plt.xlabel("Time (timestamp)")
plt.ylabel("Number of packets")
plt.show()

"""X = np.array([float(time[i] - time[i-1]) for i in range(1, len(time))])
matrix = np.diag(1/(X+1))
print(matrix.shape)
louvain = Louvain()
labels = louvain.fit_transform(matrix)
print(labels)"""